{"ast":null,"code":"import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../contents/cartConstents';\nimport axios from 'axios';\nexport const addToCart = (id, qty, fromProductPage = false) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n\n  // 计算新的数量\n  const itemInCart = getState().cart.cartItems.find(x => x.product === id);\n  const currentQty = itemInCart ? itemInCart.qty : 0;\n  const newQty = fromProductPage ? currentQty + qty : qty;\n\n  // 用更新后的数量派发动作\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      stock: data.stock,\n      qty: newQty > data.stock ? data.stock : newQty,\n      // 不要超过库存量\n      fromProductPage\n    }\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\nexport const removeFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};","map":{"version":3,"names":["CART_ADD_ITEM","CART_REMOVE_ITEM","axios","addToCart","id","qty","fromProductPage","dispatch","getState","data","get","itemInCart","cart","cartItems","find","x","product","currentQty","newQty","type","payload","_id","name","image","price","stock","localStorage","setItem","JSON","stringify","removeFromCart"],"sources":["/Users/risun/Desktop/podian/frontend/src/actions/cartAction.js"],"sourcesContent":["import { CART_ADD_ITEM, CART_REMOVE_ITEM } from '../contents/cartConstents'\nimport axios from 'axios'\n\n \nexport const addToCart = (id, qty,fromProductPage = false) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`);\n\n  // 计算新的数量\n  const itemInCart = getState().cart.cartItems.find((x) => x.product === id);\n  const currentQty = itemInCart ? itemInCart.qty : 0;\n  const newQty = fromProductPage ? currentQty + qty : qty; \n\n  // 用更新后的数量派发动作\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      stock: data.stock,\n      qty: newQty > data.stock ? data.stock : newQty, // 不要超过库存量\n      fromProductPage\n    },\n  });\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n};\n\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}"],"mappings":"AAAA,SAASA,aAAa,EAAEC,gBAAgB,QAAQ,2BAA2B;AAC3E,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,SAAS,GAAGA,CAACC,EAAE,EAAEC,GAAG,EAACC,eAAe,GAAG,KAAK,KAAK,OAAOC,QAAQ,EAAEC,QAAQ,KAAK;EAC1F,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAE,iBAAgBN,EAAG,EAAC,CAAC;;EAEvD;EACA,MAAMO,UAAU,GAAGH,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,SAAS,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,OAAO,KAAKZ,EAAE,CAAC;EAC1E,MAAMa,UAAU,GAAGN,UAAU,GAAGA,UAAU,CAACN,GAAG,GAAG,CAAC;EAClD,MAAMa,MAAM,GAAGZ,eAAe,GAAGW,UAAU,GAAGZ,GAAG,GAAGA,GAAG;;EAEvD;EACAE,QAAQ,CAAC;IACPY,IAAI,EAAEnB,aAAa;IACnBoB,OAAO,EAAE;MACPJ,OAAO,EAAEP,IAAI,CAACY,GAAG;MACjBC,IAAI,EAAEb,IAAI,CAACa,IAAI;MACfC,KAAK,EAAEd,IAAI,CAACc,KAAK;MACjBC,KAAK,EAAEf,IAAI,CAACe,KAAK;MACjBC,KAAK,EAAEhB,IAAI,CAACgB,KAAK;MACjBpB,GAAG,EAAEa,MAAM,GAAGT,IAAI,CAACgB,KAAK,GAAGhB,IAAI,CAACgB,KAAK,GAAGP,MAAM;MAAE;MAChDZ;IACF;EACF,CAAC,CAAC;EAEFoB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACrB,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,SAAS,CAAC,CAAC;AAC9E,CAAC;AAED,OAAO,MAAMiB,cAAc,GAAI1B,EAAE,IAAK,OAAOG,QAAQ,EAAEC,QAAQ,KAAK;EAClED,QAAQ,CAAC;IACPY,IAAI,EAAElB,gBAAgB;IACtBmB,OAAO,EAAEhB;EACX,CAAC,CAAC;EACFsB,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,IAAI,CAACC,SAAS,CAACrB,QAAQ,CAAC,CAAC,CAACI,IAAI,CAACC,SAAS,CAAC,CAAC;AAC9E,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}