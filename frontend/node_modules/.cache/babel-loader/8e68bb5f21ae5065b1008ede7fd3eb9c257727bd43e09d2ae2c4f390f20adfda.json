{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { useMemo } from \"react\";\nimport { productListReducer, productDeatilsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\n//获取本地存储的登录用户信息\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\n\n//获取本地存储的用户收货地址信息\nconst shippingAddressStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\n//初始化state值\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","useMemo","productListReducer","productDeatilsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","orderCreateReducer","orderDetailsReducer","reducer","productList","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","orderCreate","orderDetails","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["/Users/risun/Desktop/podian/frontend/src/store.js"],"sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { thunk } from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { useMemo } from \"react\";\nimport {\n  productListReducer,  \n  productDeatilsReducer,\n  \n} from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer,\n   userRegisterReducer , \n   userDetailsReducer,\n   userUpdateProfileReducer,\n   userListReducer,\n   userDeleteReducer,} from './reducers/userReducers'\nimport { orderCreateReducer,orderDetailsReducer} from './reducers/orderReducers'\nconst reducer = combineReducers({\n  productList: productListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  \n})\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n//获取本地存储的登录用户信息\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n  ? JSON.parse(localStorage.getItem('userInfo'))\n  : null\n\n//获取本地存储的用户收货地址信息\nconst shippingAddressStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n//初始化state值\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressStorage,\n  },\n  userLogin: { userInfo: userInfoFromStorage },\n}\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,eAAe,EAAEC,eAAe,QAAQ,OAAO;AACrE,SAASC,KAAK,QAAQ,aAAa;AACnC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,OAAO,QAAQ,OAAO;AAC/B,SACEC,kBAAkB,EAClBC,qBAAqB,QAEhB,4BAA4B;AACnC,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,gBAAgB,EACtBC,mBAAmB,EACnBC,kBAAkB,EAClBC,wBAAwB,EACxBC,eAAe,EACfC,iBAAiB,QAAQ,yBAAyB;AACrD,SAASC,kBAAkB,EAACC,mBAAmB,QAAO,0BAA0B;AAChF,MAAMC,OAAO,GAAGhB,eAAe,CAAC;EAC9BiB,WAAW,EAAEZ,kBAAkB;EAC/Ba,IAAI,EAAEX,WAAW;EACjBY,SAAS,EAAEX,gBAAgB;EAC3BY,YAAY,EAAEX,mBAAmB;EACjCY,WAAW,EAAEX,kBAAkB;EAC/BY,iBAAiB,EAAEX,wBAAwB;EAC3CY,QAAQ,EAAEX,eAAe;EACzBY,UAAU,EAAEX,iBAAiB;EAC7BY,WAAW,EAAEX,kBAAkB;EAC/BY,YAAY,EAAEX;AAEhB,CAAC,CAAC;AACF,MAAMY,oBAAoB,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,GAC1DC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,GAC7C,EAAE;AACN;AACA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,GACxDC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAC5C,IAAI;;AAER;AACA,MAAMI,sBAAsB,GAAGL,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,GAClEC,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,CAAC,GACnD,CAAC,CAAC;AACN;;AAEA,MAAMK,YAAY,GAAG;EACnBhB,IAAI,EAAE;IACJiB,SAAS,EAAER,oBAAoB;IAC/BS,eAAe,EAAEH;EACnB,CAAC;EACDd,SAAS,EAAE;IAAEkB,QAAQ,EAAEL;EAAoB;AAC7C,CAAC;AAED,MAAMM,UAAU,GAAG,CAACpC,KAAK,CAAC;AAE1B,MAAMqC,KAAK,GAAGxC,WAAW,CACvBiB,OAAO,EACPkB,YAAY,EACZ/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAU,CAAC,CACpD,CAAC;AAED,eAAeC,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}